gitignore specifies files that should be ignored

create respository in gitinit

git status - cheeck status 

git log - cheack log

use q to close log
git add-A create snap shots

add a remote 
git remote add orgin <url>

cheack remotes
git remote -v


push the first time 
git push -u origin main

git push
push x times

install virtual env 
py -m pip install virtualenv

create virtual envirnment 
py -m venv venv

activate virtual envirnment
venv\scripts\activat

deactivate virtual envirnment
deactivate
install flask
py -m pip install flask

start server
py server.py



__name__ = magic variable



# .gitignore
#Config file location
#     --global              use global config file
#     --system              use system config file
#     --local               use repository config file
#     --worktree            use per-worktree config file
#     -f, --file <file>     use given config file
#     --blob <blob-id>      read config from given blob object

# Action
#     --get                 get value: name [value-pattern]
#     --get-all             get all values: key [value-pattern]
#     --get-regexp          get values for regexp: name-regex [value-pattern]
#     --get-urlmatch        get value specific for the URL: section[.var] URL
#     --replace-all         replace all matching variables: name value [value-pattern]     
#     --add                 add a new variable: name value
#     --unset               remove a variable: name [value-pattern]
#     --unset-all           remove all matches: name [value-pattern]
#     --rename-section      rename section: old-name new-name
#     --remove-section      remove a section: name
#     -l, --list            list all
#     --fixed-value         use string equality when comparing values to 'value-pattern'   
#     -e, --edit            open an editor
#     --get-color           find the color configured: slot [default]
#     --get-colorbool       find the color setting: slot [stdout-is-tty]

# Type
#     -t, --type <type>     value is given this type
#     --bool                value is "true" or "false"
#     --int                 value is decimal number
#     --bool-or-int         value is --bool or --int
#     --bool-or-str         value is --bool or string
#     --path                value is a path (file or directory name)
#     --expiry-date         value is an expiry date

# Other
#     -z, --null            terminate values with NUL byte
#     --name-only           show variable names only
#     --includes            respect include directives on lookup
#     --show-origin         show origin of config (file, standard input, blob, command line)
#     --show-scope          show scope of config (worktree, local, global, system, command)
#     --default <value>     with --get, use default value when missing entry

